% Example of 2D computation of plate with two holes
%
% Geometry contributed by Ngurah Beni Setiawan

pp=[ % points
  -1.00000   -1.00000;  -1.00000    1.00000;   1.00000   -1.00000
   1.00000    1.00000;  -1.00000   -1.00000;  -1.00000   -0.86009
  -1.00000   -0.72226;  -1.00000   -0.57985;  -1.00000   -0.43612
  -1.00000   -0.28179;  -1.00000   -0.13418;  -0.89645   -0.05321
  -1.00000    0.04745;  -0.87922    0.12725;  -1.00000    0.22055
  -1.00000    0.36420;  -1.00000    0.51721;  -1.00000    0.68896
  -1.00000    0.84424;  -0.86895    1.00000;  -0.86222   -1.00000
  -0.81999   -0.84999;  -0.86367   -0.71250;  -0.85059   -0.55217
  -0.85909   -0.38212;  -0.71323   -0.33843;  -0.83753   -0.21465
  -0.80415    0.25980;  -0.84044    0.40797;  -0.87008    0.57107
  -0.81120    0.70180;  -0.85603    0.84552;  -0.73406    1.00000
  -0.71549   -1.00000;  -0.65678   -0.84129;  -0.71885   -0.68098
  -0.59926   -0.56146;  -0.71775   -0.49223;  -0.65951    0.36682
  -0.72060    0.53122;  -0.64555    0.68623;  -0.69821    0.84365
  -0.59272    1.00000;  -0.56806   -1.00000;  -0.48778   -0.85118
  -0.55234   -0.70507;  -0.45525   -0.53829;  -0.55620   -0.39603
  -0.48407    0.39968;  -0.56690    0.53143;  -0.48012    0.67916
  -0.54380    0.83772;  -0.44924    1.00000;  -0.41475   -1.00000
  -0.32283   -0.84937;  -0.39645   -0.69832;  -0.30584   -0.55286
  -0.38456   -0.38298;  -0.31216    0.35315;  -0.39247    0.52539
  -0.31952    0.68053;  -0.39080    0.83767;  -0.30278    1.00000
  -0.26403   -1.00000;  -0.15196   -0.85415;  -0.23285   -0.70949
  -0.13523   -0.58546;  -0.20751   -0.43921;  -0.23850   -0.30269
  -0.14672    0.37655;  -0.23956    0.51950;  -0.16513    0.68890
  -0.23733    0.84200;  -0.15264    1.00000;  -0.11706   -1.00000
   0.02729   -0.86091;  -0.05614   -0.72517;   0.03772   -0.59213
  -0.04060   -0.45304;  -0.07688   -0.30733;  -0.13770   -0.16952
   0.00190   -0.13899;  -0.10003   -0.00461;  -0.03905    0.11907
  -0.16715    0.22183;   0.00405    0.41996;  -0.08422    0.54907
   0.00020    0.69826;  -0.08048    0.84503;  -0.00010    1.00000
   0.01858   -1.00000;   0.21076   -0.85474;   0.12134   -0.73001
   0.20659   -0.59508;   0.12410   -0.44862;   0.07241   -0.30910
   0.14270   -0.17983;   0.10014   -0.01074;   0.12461    0.13813
   0.01416    0.27215;   0.16006    0.40107;   0.08844    0.55806
   0.16984    0.69402;   0.08088    0.84544;   0.15257    1.00000
   0.15819   -1.00000;   0.38416   -0.85016;   0.30442   -0.71526
   0.38456   -0.56801;   0.28013   -0.45570;   0.24812   -0.31074
   0.20064    0.26530;   0.33822    0.36582;   0.25304    0.53078
   0.32733    0.68690;   0.23971    0.84473;   0.30359    1.00000
   0.30685   -1.00000;   0.54879   -0.84189;   0.47884   -0.70194
   0.53954   -0.54262;   0.41909   -0.39173;   0.50325    0.39999
   0.40720    0.53232;   0.48869    0.68354;   0.39507    0.84046
   0.45051    1.00000;   0.45568   -1.00000;   0.70065   -0.83515
   0.64807   -0.67877;   0.70691   -0.51663;   0.57560   -0.39279
   0.66818    0.36293;   0.57687    0.53395;   0.65294    0.68720
   0.54849    0.83923;   0.59353    1.00000;   0.59846   -1.00000
   0.85015   -0.83995;   0.81846   -0.68457;   0.85087   -0.38475
   0.71431   -0.33775;   0.89570   -0.05847;   0.84375    0.40474
   0.72600    0.52937;   0.81586    0.70239;   0.70144    0.84415
   0.73390    1.00000;   0.73450   -1.00000;   1.00000   -0.86226
   0.85453   -0.54117;   1.00000   -0.58886;   0.83654   -0.21619
   1.00000   -0.28820;   0.88125    0.12104;   0.80837    0.25477
   1.00000    0.35755;   0.87152    0.56956;   1.00000    0.68566
   0.85743    0.84738;   0.86872    1.00000;   0.86610   -1.00000
   1.00000   -0.72367;   1.00000   -0.43909;   1.00000   -0.14090
   1.00000    0.03996;   1.00000    0.21368;   1.00000    0.51249
   1.00000    0.84163];
tt=[ % triangles
  14   15   13; 165  166  143; 153  165  143
 153  165  154; 155  166  143;  76   75   91
  76  106   91;   9   10   25;  28   16   15
  28   14   15;  27   10   25;  27   11   10
  30   18   31; 167  155  166; 167  157  156
 167  155  156; 129  139  149; 129  139  140
 105  104   90; 112  113  101; 107  118  128
 107  119  128;  79   96   95;  24   23    8
  24    9   25;  24    9    8;   7   23    8
  12   27   11;  12   11   13;  12   14   13
  32   18   31;  40   30   31;  17   30   18
  42   33   43;  42   32   31;  42   32   33
  85   84   83; 144  157  156; 133  144  156
 133  144  145; 141  153  154; 162  139  149
 150  162    3; 150  162  139; 130  129  140
 130  119  129;  98   84   83;  98   82   83
 111   96   95; 114  113  124; 114  113  101
 126  136  127; 138  129  149; 138  119  129
 138  119  128;  92   76  106;  92   76   93
  92  118  106;  92  107  118; 108   94  109
 108   92  107; 108   94   93; 108   92   93
  78   79   95;  78   94   95;  78   94   93
  80   82   96;  80   79   96;  56   55   45
  22   34   21;  26   27   25;  19   32   18
  20   32   33;  20   19    2;  20   19   32
  50   40   39;  41   40   31;  41   42   31
  41   50   51;  41   50   40;  29   40   30
  29   28   16;  29   28   39;  29   40   39
  29   17   16;  29   17   30;  53   62   63
  52   62   51;  52   41   51;  52   41   42
  52   42   43;  52   53   43;  52   53   62
  61   62   51; 158  144  145; 123  113  124
 137  136  127; 137  147  148; 137  147  136
 135  147  136; 151  152  140; 164  141  154
 164  151  152; 164  151  141; 163  139  140
 163  150  139; 163  152  140;  99   98   84
 122  109  121; 122  132  121; 110   94  109
 110  122  109; 110  122  111; 110   94   95
 110  111   95;  97   82   96;  97  111   96
  97   98   82; 115  114  124; 115  114  103
 117  126  127; 120  107  119; 120  108  107
 120  108  109; 120  109  121; 120  130  121
 120  130  119;  77   76   93;  77   78   93
  68   80   79;  47   56   57;  54   55   45
  54   64   55;  54   45   44;   6    7   23
   6   22   23;   6   21    1;   6   22   21
  38   26   48;  38   24   25;  38   26   25
  88  103  104;  73   61   62;  73   74   63
  73   62   63; 168  144  157; 168  158  144
 134  133  145; 134  123  133; 134  123  124
 134  135  145; 160  147  148; 160  161  148
 131  130  140; 131  151  140; 131  130  121
 131  132  121; 131  151  141; 125  126  136
 125  115  126; 125  135  136; 125  115  124
 125  134  124; 125  134  135; 116  117  126
 116  103  104; 116  105  104; 116  117  105
 116  115  103; 116  115  126;  65   76   75
  65   77   76;  65   64   75;  65   64   55
  67   78   79;  67   77   78;  67   68   79
  67   68   57;  81   82   83;  81   80   82
  58   47   48;  58   68   57;  58   47   57
  36   24   23;  36   38   24;  36   22   23
  72   73   61;  72   71   61;  89   73   74
  89  104   90;  89   74   90;  89   88  104
  89   72   88;  89   72   73;  60   50   51
  60   61   51;  60   71   61; 146  158  145
 146  135  145; 146  135  147; 146  160  147
 169  161    4; 169  160  161; 142  131  132
 142  131  141; 142  141  153;  66   65   55
  66   56   55;  66   65   77;  66   67   77
  66   56   57;  66   67   57;  69   68   80
  69   81   80;  69   58   68;  35   36   22
  35   22   34;  35   45   44;  35   34   44
  37   36   38;  37   47   48;  37   38   48
  87   72   88;  87   72   71;  87   70   71
  49   50   39;  49   60   50; 100  112  101
 100   85   84; 100   70   85; 100   99   84
 100   99  112; 159  146  160; 159  169  160
 159  146  158; 159  168  158;  46   35   36
  46   37   36;  46   35   45;  46   56   45
  46   47   56;  46   37   47; 102   88  103
 102   87   88; 102  114  101; 102  114  103
  59   60   71;  59   49   60;  59   70   71
  59   70   85;  86   87   70;  86  100   70
  86  100  101;  86  102  101;  86  102   87
    ];
%pp = load('pp.dat');tt = load('tt.dat');

pp(:,3)=0; % set z coordinate to 0
tt(:,4:5)=1; % MatId and EltId set to 1
model=struct('Node',[(1:size(pp,1))'*[1 0 0 0] pp], ...
    'Elt',[Inf abs('t3p') 0; 
     tt]);
% Unused nodes
n1=feutil('getnodegroupall',model);setdiff(model.Node(:,1),n1(:,1))

% Define elastic material
model.pl=[1 fe_mat('m_elastic','SI',1) 1e7 .3];
% Define integration rule
model.il=[1 fe_mat('p_solid','SI',2) 0 0 -3];

% Beware OpenFEM assumes oriented volumes !!! yours are not
model.Elt=feutil('orient',model);
% Define load and boundary condition
data=struct('sel','groupall','dir',{{'1','0'}},'DOF',[.01;.02]);
data2=struct('sel','groupall','dir',{{'0','-1'}},'DOF',[.01;.02]);
model=fe_case(model,'fixdof','left', ... % Define fixed edge
    sprintf('x==%.15g -DOF 1',min(model.Node(:,5))), ...
   'fixdof','bottom', ... % Define fixed edge
     sprintf('y==%.15g -DOF 2',min(model.Node(:,6))), ...
    'fvol','Vertical',data, ...
    'fvol','Horizontal',data2);

% Assemble and solve . 
% The 'NoT' is for assembly without using boundary condition (in Case.T)
model=fe_mknl(model,'NoT');Case=fe_case(model,'gett');
Load=fe_load(model,'NoT');

def=struct('def',ofact({model.K{2},Case.T},Load.def),'DOF',Load.DOF);
feplot(model,def);fecom('view2');
data=fe_stress('stess -gstate',model,def);
stress=data.GroupInfo{5}

% the .Y [3x3x255] gives the 3 stress components at the 3 gauss points
% of each of the 255 elements

return

% This is to do the same thing using volumes

model=feutil('extrude 1 0 0 1',model);model.il=p_solid('dbval 1 d3 -3');
model.Elt=feutil('set group 1 matid 1 proid 1',model);
data=struct('sel','groupall','dir',{{'1','0','0'}},'DOF',[.01;.02;.03]);
model=fe_case(model,'fvol','volume',data);
model.K=[];cf.def=fe_simul('static',model);



